var Preloader = new Class({
    Implements: [Options, Events],
    options: {
        images: {},
        sounds: {},
        videos: {},
        json: {},
        jsonp: {},
        scripts: {},
        stylesheets: {}
    },
    initialize: function (c) {
        this.setOptions(c)
    },
    load: function () {
        var c = 0,
            f = 0,
            g = (new Date).getTime(),
            d = {
                images: {},
                sounds: {},
                videos: {},
                json: {},
                jsonp: {},
                scripts: {},
                stylesheets: {}
            },
            h= {
                sounds: {},  
            },
            e = function () {
                f += 1;
                this.fireEvent("progress", [f, c, 100 / c * f]);
                f === c && this.fireEvent("complete", [d, c, (new Date).getTime() - g])
            }.bind(this);
        this.fireEvent("start", [c]);
        Object.each(this.options, function (a) {
            c +=
                Object.getLength(a)
        });
        Object.each(this.options.images, function (a, b) {
            d.images[b] = Asset.image(a, {
                onLoad: e
            })
        });
        Object.each(this.options.sounds, function (a, b) {
            d.sounds[b] = new Element("audio");
            d.sounds[b].addEventListener("canplaythrough", e, !1);
            d.sounds[b].set("src", a);
            d.sounds[b].load();
        });
        
        Object.each(this.options.videos, function (a, b) {
            d.videos[b] = new Element("video");
            d.videos[b].addEventListener("canplaythrough", e, !1);
            d.videos[b].set("src", a);
            d.videos[b].load()
            
        });
        Object.each(this.options.json, function (a,
            b) {
            var c = new Request.JSON(typeof a === "object" ? a : {
                url: a
            });
            c.addEvent("success", function (a) {
                d.json[b] = a;
                e()
            });
            c.send()
        });
        Object.each(this.options.jsonp, function (a, b) {
            var c = new Request.JSONP(typeof a === "object" ? a : {
                url: a
            });
            c.addEvent("success", function (a) {
                d.jsonp[b] = a;
                e()
            });
            c.send()
        });
        Object.each(this.options.scripts, function (a, b) {
            d.scripts[b] = Asset.javascript(a, {
                onLoad: e
            })
        });
        Object.each(this.options.stylesheets, function (a, b) {
            d.stylesheets[b] = Asset.css(a);
            e()
        })
    }
});